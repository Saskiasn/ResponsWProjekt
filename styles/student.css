@layer card, form, thumbnail, accordion, detailed-list, call-to-action, subgrid;

@layer card {
  .card {}
}

@layer thumbnail {
  .thumbnail {}
}

@layer accordion {
  .accordion {}
}

@layer detailed-list {
  .detailed-list {}
}

@layer call-to-action {
  .cta {}
}

/* Min:392px. Max: 1280px */
@layer card {
  .card {}
}

@layer thumbnail {
  .thumbnail {}
}

@layer accordion {
  .accordion {}
}

@layer detailed-list {
  .detailed-list {}
}

@layer call-to-action {
  .cta {}
}

@layer form {
  .main {
    container-type: inline-size;
  }

  /* Add padding to the form container */
  .container.form {
    padding-top: 10rem;
    /* Space above the form */
    padding-bottom: 2rem;
    /* Space below the form */
  }

  /* Style for the "Sign Up" heading */
  .container.form h2 {
    font-size: 80px;
    /* Ensure the correct font size */
    text-align: left;
    /* Align text to the left */
  }

  /* Style for the fieldsets (e.g., Personal Details) */
  .container.form fieldset {
    margin-top: 2rem;
    margin-bottom: 4rem;
    color: hsl(var(--hue-1), 70%, 30%);
    /* Took this color from the .c1-70-30 class, which was used on "SIGN" part of Sign Up */

    display: grid;
    /* Dynamically adjust the column layout based on container size */
    /* grid-template-columns: repeat(auto-fit, minmax(clamp(0px, 100%, 400px), 1fr)); */
    grid-template-columns: 1fr;
    gap: 2rem;
  }

  /* 
  .group-row {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .group-row .group {
    flex: 1;
    min-width: 200px;
  } */

  .container.form fieldset:first-of-type {
    margin-top: 6rem;
  }

  .container.form legend {
    font-size: 35px;
    letter-spacing: 0.01em;
    /* Adjusted so horizontal spacing matches reference image */
  }

  .container.form .group {
    margin-top: 1.6rem;
    margin-bottom: 1rem;
  }

  .container.form label {
    font-weight: 600;
    /* Make the text bold */
    font-size: 2.3rem;
    /* Optional: Adjust the font size */
    color: hsl(var(--hue-1), 40%, 30%);
    /* Optional: Adjust label color */
  }

  /* Style for form inputs and selects */
  .container.form input,
  .container.form select {
    font-size: 2rem;
    /* Adjust the font size */
    padding: 1.5rem;
    /* Internal padding for input fields */
    margin-top: 1rem;
    /* Space above each field */
    width: 100%;
    /* Full width */
    border: 1px solid hsl(var(--hue-1), 40%, 30%);
    /* Thicker border */
    border-radius: 10px;
    /* Rounded corners */
    box-sizing: border-box;
    /* Ensures padding doesn't affect width */
    background-color: white;
    /* Ensure input fields have a white background */
  }

  .container.form .buttons {
    display: flex;
    /* Arrange buttons horizontally */
    justify-content: flex-end;
    /* Align buttons to the left */
    gap: 2.8rem;
    /* Add space between buttons */
    margin-top: 5.5rem;
    /* Add space above the buttons */
  }

  .container.form button {
    background-color: hsl(var(--hue-1), 60%, 40%);
    /* Blue color */
    color: hsl(var(--hue-1), 100%, 90%);
    /* White text */
    font-size: 2.5rem;
    /* Adjust text size */
    padding: 10px 26px;
    /* Adjust button size */
    border: none;
    /* Remove border */
    border-radius: 10px;
    /* Rounded corners */
    cursor: pointer;
    /* Pointer cursor on hover */
    transition: background-color 0.3s ease;
    /* Smooth hover transition */
  }

  .container.form button:hover {
    background-color: hsl(220, 60%, 40%);
    /* Slightly darker blue on hover */
  }

  /* Visually hidden helper text */
  .help {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
  }

  @container (min-width: 1091px) {
    .container.form fieldset {
      grid-template-columns: 1fr 1fr;
    }
  }
}



@layer subgrid {
  .subgrid {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(5, 10rem);
    gap: 1rem;

  }


  .a,
  .b,
  .c {
    background-color: hsl(var(--hue-1), 70%, 20%);
    color: hsl(var(--white-hue), 100%, 96%);
    padding: 1rem;
    border-radius: 1rem;
    /* height: 10rem; */
    grid-column: span 8;
  }

  .d {
    display: grid;
    grid-template-columns: subgrid;
    /* Apply subgrid */
    grid-template-rows: subgrid;
    /* Apply subgrid */
    grid-row: 4/6;
    grid-column: span 8;
    gap: 1rem;
    padding: 1rem;
    border-radius: 1rem;
    /* Add rounded corners to the parent */
    background-color: hsl(var(--hue-1), 70%, 20%);

  }

  .e,
  .f,
  .g,
  .h {
    background-color: hsl(var(--hue-1), 70%, 85%);
    border-radius: 0.5rem;
    /* Rounded corners for children */
    padding: 1rem;
    grid-column: span 4;
  }

  @media (width >=768px) {
    .subgrid {
      grid-template-rows: repeat(3, 10rem);
    }

    .a,
    .b {
      grid-column: span 4;
    }

    .d {
      grid-row: 3/4;
    }

    .e {
      grid-column: span 2;

    }

    .f,
    .g {
      grid-column: span 1;
    }

    .h {
      grid-column: span 4;
    }
  }

  @media (width >=996px) {


    .a {
      grid-column: span 5;
    }

    .b {
      grid-column: span 3;
    }

    .c {
      grid-column: span 3;
      grid-row: 2/4;
    }

    .d {
      grid-row: 2/4;
      grid-column: span 5;
    }

    .e {
      grid-column: span 2;
      grid-row: span 2;

    }

    .f {
      grid-column: span 3;
    }

    .g {
      grid-column: span 2;

    }

    .h {
      grid-column: 5/8
    }
  }

}